---
description: Katsumascoreテーマのバージョン管理とデプロイメント実践
---

# バージョン管理 & デプロイメント

## バージョニング戦略
[README.md](mdc:README.md)のガイドラインに基づく：

### バージョン番号付け
- **メジャー変更**（テンプレート追加/削除）: `v1.0.0` → `v2.0.0`
- **機能追加/削除**: `v1.0.0` → `v1.1.0`
- **バグ修正と現在の機能修正**: `v1.0.0` → `v1.0.1`

### Gitタグ付け
```bash
# テンプレートファイル変更
git tag v2.0.0

# 機能追加/削除
git tag v1.1.0

# バグ修正
git tag v1.0.1
```

## テーマ情報
- **テーマ名**: Katsumascore
- **バージョン**: 1.0
- **作者**: Katsumasa-sato
- **作者URI**: https://x.com/Katsun0921
- **テーマURI**: https://katsumascore.blog/
- **ライセンス**: GPL v3

## デプロイメントチェックリスト
1. [style.css](mdc:style.css)の**バージョン番号を更新**
2. ステージング環境で**すべての機能をテスト**
3. **多言語サポートを検証**（日本語/英語）
4. 複数のデバイスで**レスポンシブデザインをチェック**
5. **HTML/CSSを検証**してエラーを確認
6. **必須プラグインでテスト**（Polylang、Elementor、ACF Pro）
7. 適切なバージョン番号で**gitタグを作成**
8. **本番環境にデプロイ**

## ファイル構成
- 開発ファイルを論理的なディレクトリに整理
- 説明的なコミットメッセージを使用
- コミットメッセージで破壊的変更を文書化
- 意味のあるコミットでクリーンなgit履歴を維持

## バックアップ戦略
- デプロイメント前の定期的なデータベースバックアップ
- メジャーアップデート前のテーマファイルバックアップ
- ステージング環境での復元テスト
- ロールバック手順の文書化
